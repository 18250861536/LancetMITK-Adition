/*============================================================================

The Medical Imaging Interaction Toolkit (MITK)

Copyright (c) German Cancer Research Center (DKFZ)
All rights reserved.

Use of this source code is governed by a 3-clause BSD license that can be
found in the LICENSE file.

============================================================================*/

#ifndef TrackingObject_h
#define TrackingObject_h

#include <mitkImageToImageFilter.h>

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkLancetIGTExports.h>

#include "mitkPointSet.h"
#include "mitkSurface.h"

/**Documentation
  * \brief An object of this class represents a navigation object in the view of the software.
  *        A few informations like an identifier, a object, a surface and a mitk image
  *        are stored in such an object. The classes NavigationObjectReader and NavigationObjectWriter
  *        are availiable to write/read object to/from the harddisc. If you need a collection
  *        of navigation object the class NavigationObjectStorage could be used.
  *
  * \ingroup IGT
  */
class MITKLANCETIGT_EXPORT NavigationObject : public itk::DataObject
{
public:
	mitkClassMacroItkParent(NavigationObject,itk::DataObject);
	itkFactorylessNewMacro(Self);
	itkCloneMacro(Self);

	itkGetMacro(Name, std::string);
	itkGetMacro(ReferencFrameName, std::string);
	itkGetMacro(Surface, mitk::Surface::Pointer);
	itkGetMacro(Landmarks, mitk::PointSet::Pointer);
	itkGetMacro(T_Object2ReferenceFrame, vtkSmartPointer<vtkMatrix4x4>);

	itkSetMacro(Name, std::string);
	itkSetMacro(ReferencFrameName, std::string);
	itkSetMacro(Surface, mitk::Surface::Pointer);
	itkSetMacro(Landmarks, mitk::PointSet::Pointer);
	itkSetMacro(T_Object2ReferenceFrame, vtkSmartPointer<vtkMatrix4x4>);

	//############################################################

protected:

	//## data structure of a navigation tool object ##
	std::string m_Name;
	/** @brief Holds Name of Reference Frame. */
	std::string m_ReferencFrameName;

	/** @brief Holds Surface for object visualization. */
	mitk::Surface::Pointer m_Surface;

	// /** @brief Holds Surface for object registration. If there is no special setting, the same as ObjectSurfaceForShow*/
	// mitk::Surface::Pointer m_ObjectSurfaceForRegistration;

	/** @brief Holds landmarks for object registration. */
	mitk::PointSet::Pointer m_Landmarks;
	
	/** @brief Holds Transform Matrix for object registration.T_Object2ReferenceFrame */
	vtkSmartPointer<vtkMatrix4x4>  m_T_Object2ReferenceFrame;
};

#endif
